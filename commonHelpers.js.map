{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startButton = document.querySelector(\"[data-start]\");\nconst timerContainer = document.querySelector(\".timer\"); \nlet countdownTimer;\n\n\ntimerContainer.style.display = \"block\";\n\nconst datePicker = flatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\"\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n    clearInterval(countdownTimer);\n  }\n});\n\nstartButton.addEventListener(\"click\", () => {\n  const selectedDate = datePicker.selectedDates[0];\n  const currentDate = new Date();\n  const timeDiff = selectedDate - currentDate;\n\n  countdownTimer = setInterval(() => {\n    const timeLeft = convertMs(selectedDate - new Date());\n    updateTimer(timeLeft);\n    if (timeLeft.days === 0 && timeLeft.hours === 0 && timeLeft.minutes === 0 && timeLeft.seconds === 0) {\n      clearInterval(countdownTimer);\n    }\n  }, 1000);\n\n  startButton.disabled = true;\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(time) {\n  const daysEl = document.querySelector(\"[data-days]\");\n  const hoursEl = document.querySelector(\"[data-hours]\");\n  const minutesEl = document.querySelector(\"[data-minutes]\");\n  const secondsEl = document.querySelector(\"[data-seconds]\");\n\n  daysEl.textContent = addLeadingZero(time.days);\n  hoursEl.textContent = addLeadingZero(time.hours);\n  minutesEl.textContent = addLeadingZero(time.minutes);\n  secondsEl.textContent = addLeadingZero(time.seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n"],"names":["startButton","timerContainer","countdownTimer","datePicker","flatpickr","selectedDates","iziToast","selectedDate","timeLeft","convertMs","updateTimer","ms","days","hours","minutes","seconds","time","daysEl","hoursEl","minutesEl","secondsEl","addLeadingZero","value"],"mappings":"2FAMA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,cAAc,QAAQ,EACtD,IAAIC,EAGJD,EAAe,MAAM,QAAU,QAE/B,MAAME,EAAaC,EAAU,mBAAoB,CAC/C,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACIA,EAAc,CAAC,EACpB,IAAI,MAEtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAY,SAAW,IAEvBA,EAAY,SAAW,GAEzB,cAAcE,CAAc,CAC7B,CACH,CAAC,EAEDF,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAMO,EAAeJ,EAAW,cAAc,CAAC,EAI/CD,EAAiB,YAAY,IAAM,CACjC,MAAMM,EAAWC,EAAUF,EAAe,IAAI,IAAM,EACpDG,EAAYF,CAAQ,EAChBA,EAAS,OAAS,GAAKA,EAAS,QAAU,GAAKA,EAAS,UAAY,GAAKA,EAAS,UAAY,GAChG,cAAcN,CAAc,CAE/B,EAAE,GAAI,EAEPF,EAAY,SAAW,EACzB,CAAC,EAED,SAASS,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAYM,EAAM,CACzB,MAAMC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDH,EAAO,YAAcI,EAAeL,EAAK,IAAI,EAC7CE,EAAQ,YAAcG,EAAeL,EAAK,KAAK,EAC/CG,EAAU,YAAcE,EAAeL,EAAK,OAAO,EACnDI,EAAU,YAAcC,EAAeL,EAAK,OAAO,CACrD,CAEA,SAASK,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}